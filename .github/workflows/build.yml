name: ComChemKit CI

on:
  push:
    branches: [ "main", "develop" ]
  pull_request:
    branches: [ "main", "develop" ]

env:
  BUILD_TYPE: Release

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        include:
          - os: ubuntu-latest
            cmake_generator: "Unix Makefiles"
          - os: windows-latest
            cmake_generator: "Visual Studio 17 2022"
          - os: macos-latest
            cmake_generator: "Unix Makefiles"

    steps:
    - uses: actions/checkout@v3

    - name: Print System Info
      run: |
        echo "OS: ${{ runner.os }}"
        echo "CPU Architecture: ${{ runner.arch }}"

    - name: Set up GCC (Linux)
      if: runner.os == 'Linux'
      uses: egor-tensin/setup-gcc@v1
      with:
        version: latest
        platform: x64

    - name: Install Dependencies (Linux)
      if: runner.os == 'Linux'
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential cmake

    - name: Install Dependencies (macOS)
      if: runner.os == 'macOS'
      run: |
        brew install cmake

    - name: Configure CMake
      run: >
        cmake -B ${{github.workspace}}/build
        -G "${{ matrix.cmake_generator }}"
        -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}
        -DWITH_GAUSSIAN=ON
        -DENABLE_EXTRA_WARNINGS=ON

    - name: Build
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    - name: Check Build Output
      run: |
        if [ "${{ runner.os }}" == "Windows" ]; then
          test -f ${{github.workspace}}/build/bin/${{env.BUILD_TYPE}}/cck.exe
        else
          test -f ${{github.workspace}}/build/bin/cck
        fi
      shell: bash

    - name: Run Tests
      working-directory: ${{github.workspace}}/build
      run: ctest -C ${{env.BUILD_TYPE}} --output-on-failure

    - name: Upload Build Artifacts
      uses: actions/upload-artifact@v3
      with:
        name: cck-${{ runner.os }}
        path: |
          ${{github.workspace}}/build/bin/**/cck*
        if-no-files-found: error

    - name: Archive CMake Logs on Failure
      uses: actions/upload-artifact@v3
      if: failure()
      with:
        name: cmake-logs-${{ runner.os }}
        path: |
          ${{github.workspace}}/build/CMakeFiles/CMakeOutput.log
          ${{github.workspace}}/build/CMakeFiles/CMakeError.log
